name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: check
            command: cargo check --all --verbose
            components: ""
          - name: build
            command: cargo build --all --verbose
            components: ""
          - name: clippy
            command: cargo clippy --all-targets --workspace -- -D warnings
            components: clippy
          - name: test
            command: cargo llvm-cov nextest --workspace --lcov --output-path lcov.info
            components: llvm-tools-preview
            install_extras: true
          - name: fmt
            command: cargo fmt --all -- --check
            components: rustfmt
            skip_deps: true
          - name: bpf-root-tests
            command: sudo -E env "PATH=$PATH" cargo nextest run -p bpf root_tests --include-ignored
            components: ""
            install_extras: true
    
    name: ${{ matrix.name }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      if: matrix.skip_deps != true
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          clang \
          llvm \
          libelf-dev \
          libbpf-dev \
          linux-headers-$(uname -r) \
          pkg-config \
          protobuf-compiler
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: ${{ matrix.components }}
    
    - name: Install nextest
      if: matrix.install_extras
      uses: taiki-e/install-action@nextest
    
    - name: Install llvm-cov
      if: matrix.install_extras
      uses: taiki-e/install-action@cargo-llvm-cov
    
    - name: Cache cargo
      if: matrix.skip_deps != true
      uses: Swatinem/rust-cache@v2
    
    - name: Run ${{ matrix.name }}
      run: ${{ matrix.command }}
    
    - name: Run loom tests
      if: matrix.name == 'test'
      run: cargo nextest run --release -F loom loom::tests
    
    - name: Build release
      if: matrix.name == 'build'
      run: cargo build --all --release --verbose